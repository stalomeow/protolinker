// <auto-generated>
//     Generated by protoc-gen-cslink v1.0.0.  DO NOT EDIT!
// </auto-generated>

using pb = global::Google.Protobuf;

namespace Examples
{
    public interface INetMessage : pb::IMessage
    {
        ushort MsgId { get; }
        string MsgName { get; }
    }

    public partial class NetMessageStore
    {
        protected class MsgInfo
        {
            public string Name;
            public pb::MessageParser Parser;
        }

        protected readonly System.Collections.Generic.Dictionary<ushort, MsgInfo> MsgInfoMap;

        public NetMessageStore()
        {
            this.MsgInfoMap = new()
            {
                [Examples.TopMessage.MsgId] = new() { Name = Examples.TopMessage.MsgName, Parser = Examples.TopMessage.Parser },
                [Examples.TopMessage.Types.NestedMessage.MsgId] = new() { Name = Examples.TopMessage.Types.NestedMessage.MsgName, Parser = Examples.TopMessage.Types.NestedMessage.Parser },
                [Examples.TopMessage.Types.ExcludedNestedMessage.Types.NestedNestedMessage.MsgId] = new() { Name = Examples.TopMessage.Types.ExcludedNestedMessage.Types.NestedNestedMessage.MsgName, Parser = Examples.TopMessage.Types.ExcludedNestedMessage.Types.NestedNestedMessage.Parser },
                [Examples.MessageA.MsgId] = new() { Name = Examples.MessageA.MsgName, Parser = Examples.MessageA.Parser },
                [Examples.MessageB.MsgId] = new() { Name = Examples.MessageB.MsgName, Parser = Examples.MessageB.Parser },
                [Examples.MessageC.MsgId] = new() { Name = Examples.MessageC.MsgName, Parser = Examples.MessageC.Parser },
                [Examples.MessageD.MsgId] = new() { Name = Examples.MessageD.MsgName, Parser = Examples.MessageD.Parser },
            };
        }

        public pb::MessageParser GetMsgParserById(ushort msgId)
        {
            return this.MsgInfoMap.TryGetValue(msgId, out var msgInfo) ? msgInfo.Parser : default;
        }

        public string GetMsgName(ushort msgId)
        {
            return this.MsgInfoMap.TryGetValue(msgId, out var msgInfo) ? msgInfo.Name : default;
        }

        public const ushort MsgGroupMin_GroupOne = 100;
        public const ushort MsgGroupMax_GroupOne = 300;
        public const ushort MsgGroupMin_GroupTwo = 400;
        public const ushort MsgGroupMax_GroupTwo = 900;
    }
}
